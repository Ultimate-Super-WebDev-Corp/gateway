// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: github.com/Ultimate-Super-WebDev-Corp/gateway/services/product/product.proto

package product

import (
	context "context"
	review "github.com/Ultimate-Super-WebDev-Corp/gateway/gen/services/review"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SearchByUUIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUIDs []string `protobuf:"bytes,1,rep,name=UUIDs,proto3" json:"UUIDs,omitempty"`
}

func (x *SearchByUUIDsRequest) Reset() {
	*x = SearchByUUIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByUUIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByUUIDsRequest) ProtoMessage() {}

func (x *SearchByUUIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByUUIDsRequest.ProtoReflect.Descriptor instead.
func (*SearchByUUIDsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{0}
}

func (x *SearchByUUIDsRequest) GetUUIDs() []string {
	if x != nil {
		return x.UUIDs
	}
	return nil
}

type ProductMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Brand       string   `protobuf:"bytes,2,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	CategoryIds []string `protobuf:"bytes,4,rep,name=CategoryIds,proto3" json:"CategoryIds,omitempty"`
	Images      []string `protobuf:"bytes,5,rep,name=Images,proto3" json:"Images,omitempty"`
	Country     string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *ProductMsg) Reset() {
	*x = ProductMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductMsg) ProtoMessage() {}

func (x *ProductMsg) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductMsg.ProtoReflect.Descriptor instead.
func (*ProductMsg) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{1}
}

func (x *ProductMsg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductMsg) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *ProductMsg) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductMsg) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *ProductMsg) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ProductMsg) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type ProductWithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64      `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Product *ProductMsg `protobuf:"bytes,2,opt,name=Product,proto3" json:"Product,omitempty"`
}

func (x *ProductWithID) Reset() {
	*x = ProductWithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductWithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductWithID) ProtoMessage() {}

func (x *ProductWithID) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductWithID.ProtoReflect.Descriptor instead.
func (*ProductWithID) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{2}
}

func (x *ProductWithID) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductWithID) GetProduct() *ProductMsg {
	if x != nil {
		return x.Product
	}
	return nil
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{3}
}

func (x *GetByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CatalogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sorts      []*Sort   `protobuf:"bytes,1,rep,name=Sorts,proto3" json:"Sorts,omitempty"`
	Filters    []*Filter `protobuf:"bytes,2,rep,name=Filters,proto3" json:"Filters,omitempty"`
	CategoryId string    `protobuf:"bytes,3,opt,name=CategoryId,proto3" json:"CategoryId,omitempty"`
	TextSearch string    `protobuf:"bytes,4,opt,name=TextSearch,proto3" json:"TextSearch,omitempty"`
	Token      uint64    `protobuf:"varint,5,opt,name=Token,proto3" json:"Token,omitempty"`
	Limit      uint64    `protobuf:"varint,6,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *CatalogRequest) Reset() {
	*x = CatalogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogRequest) ProtoMessage() {}

func (x *CatalogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogRequest.ProtoReflect.Descriptor instead.
func (*CatalogRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{4}
}

func (x *CatalogRequest) GetSorts() []*Sort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *CatalogRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CatalogRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *CatalogRequest) GetTextSearch() string {
	if x != nil {
		return x.TextSearch
	}
	return ""
}

func (x *CatalogRequest) GetToken() uint64 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *CatalogRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CatalogMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters            []*Filter `protobuf:"bytes,1,rep,name=Filters,proto3" json:"Filters,omitempty"`
	SelectedCategoryId string    `protobuf:"bytes,2,opt,name=SelectedCategoryId,proto3" json:"SelectedCategoryId,omitempty"`
	TextSearch         string    `protobuf:"bytes,3,opt,name=TextSearch,proto3" json:"TextSearch,omitempty"`
}

func (x *CatalogMetaRequest) Reset() {
	*x = CatalogMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogMetaRequest) ProtoMessage() {}

func (x *CatalogMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogMetaRequest.ProtoReflect.Descriptor instead.
func (*CatalogMetaRequest) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{5}
}

func (x *CatalogMetaRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CatalogMetaRequest) GetSelectedCategoryId() string {
	if x != nil {
		return x.SelectedCategoryId
	}
	return ""
}

func (x *CatalogMetaRequest) GetTextSearch() string {
	if x != nil {
		return x.TextSearch
	}
	return ""
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Ascending bool   `protobuf:"varint,3,opt,name=Ascending,proto3" json:"Ascending,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{6}
}

func (x *Sort) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sort) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// Types that are assignable to Value:
	//	*Filter_ListFilter
	//	*Filter_RangeFilter
	//	*Filter_SwitchFilter
	Value isFilter_Value `protobuf_oneof:"Value"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{7}
}

func (x *Filter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Filter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Filter) GetValue() isFilter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Filter) GetListFilter() *ListFilter {
	if x, ok := x.GetValue().(*Filter_ListFilter); ok {
		return x.ListFilter
	}
	return nil
}

func (x *Filter) GetRangeFilter() *RangeFilter {
	if x, ok := x.GetValue().(*Filter_RangeFilter); ok {
		return x.RangeFilter
	}
	return nil
}

func (x *Filter) GetSwitchFilter() *SwitchFilter {
	if x, ok := x.GetValue().(*Filter_SwitchFilter); ok {
		return x.SwitchFilter
	}
	return nil
}

type isFilter_Value interface {
	isFilter_Value()
}

type Filter_ListFilter struct {
	ListFilter *ListFilter `protobuf:"bytes,4,opt,name=ListFilter,proto3,oneof"`
}

type Filter_RangeFilter struct {
	RangeFilter *RangeFilter `protobuf:"bytes,5,opt,name=RangeFilter,proto3,oneof"`
}

type Filter_SwitchFilter struct {
	SwitchFilter *SwitchFilter `protobuf:"bytes,6,opt,name=SwitchFilter,proto3,oneof"`
}

func (*Filter_ListFilter) isFilter_Value() {}

func (*Filter_RangeFilter) isFilter_Value() {}

func (*Filter_SwitchFilter) isFilter_Value() {}

type ListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableItems []string `protobuf:"bytes,1,rep,name=AvailableItems,proto3" json:"AvailableItems,omitempty"`
	SelectedItems  []string `protobuf:"bytes,2,rep,name=SelectedItems,proto3" json:"SelectedItems,omitempty"`
}

func (x *ListFilter) Reset() {
	*x = ListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilter) ProtoMessage() {}

func (x *ListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilter.ProtoReflect.Descriptor instead.
func (*ListFilter) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{8}
}

func (x *ListFilter) GetAvailableItems() []string {
	if x != nil {
		return x.AvailableItems
	}
	return nil
}

func (x *ListFilter) GetSelectedItems() []string {
	if x != nil {
		return x.SelectedItems
	}
	return nil
}

type SwitchFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableSwitches []string `protobuf:"bytes,1,rep,name=AvailableSwitches,proto3" json:"AvailableSwitches,omitempty"`
	SelectedSwitch    string   `protobuf:"bytes,2,opt,name=SelectedSwitch,proto3" json:"SelectedSwitch,omitempty"`
}

func (x *SwitchFilter) Reset() {
	*x = SwitchFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchFilter) ProtoMessage() {}

func (x *SwitchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchFilter.ProtoReflect.Descriptor instead.
func (*SwitchFilter) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{9}
}

func (x *SwitchFilter) GetAvailableSwitches() []string {
	if x != nil {
		return x.AvailableSwitches
	}
	return nil
}

func (x *SwitchFilter) GetSelectedSwitch() string {
	if x != nil {
		return x.SelectedSwitch
	}
	return ""
}

type RangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableValue *RangeValue `protobuf:"bytes,1,opt,name=AvailableValue,proto3" json:"AvailableValue,omitempty"`
	SelectedValue  *RangeValue `protobuf:"bytes,2,opt,name=SelectedValue,proto3" json:"SelectedValue,omitempty"`
}

func (x *RangeFilter) Reset() {
	*x = RangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeFilter) ProtoMessage() {}

func (x *RangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeFilter.ProtoReflect.Descriptor instead.
func (*RangeFilter) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{10}
}

func (x *RangeFilter) GetAvailableValue() *RangeValue {
	if x != nil {
		return x.AvailableValue
	}
	return nil
}

func (x *RangeFilter) GetSelectedValue() *RangeValue {
	if x != nil {
		return x.SelectedValue
	}
	return nil
}

type RangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min int64 `protobuf:"varint,1,opt,name=Min,proto3" json:"Min,omitempty"`
	Max int64 `protobuf:"varint,2,opt,name=Max,proto3" json:"Max,omitempty"`
}

func (x *RangeValue) Reset() {
	*x = RangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeValue) ProtoMessage() {}

func (x *RangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeValue.ProtoReflect.Descriptor instead.
func (*RangeValue) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{11}
}

func (x *RangeValue) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *RangeValue) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type CatalogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products  []*CatalogProduct `protobuf:"bytes,1,rep,name=Products,proto3" json:"Products,omitempty"`
	NextToken uint64            `protobuf:"varint,2,opt,name=NextToken,proto3" json:"NextToken,omitempty"`
	Total     uint64            `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *CatalogResponse) Reset() {
	*x = CatalogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogResponse) ProtoMessage() {}

func (x *CatalogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogResponse.ProtoReflect.Descriptor instead.
func (*CatalogResponse) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{12}
}

func (x *CatalogResponse) GetProducts() []*CatalogProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *CatalogResponse) GetNextToken() uint64 {
	if x != nil {
		return x.NextToken
	}
	return 0
}

func (x *CatalogResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CatalogMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    []*Filter   `protobuf:"bytes,1,rep,name=Filters,proto3" json:"Filters,omitempty"`
	Categories []*Category `protobuf:"bytes,2,rep,name=Categories,proto3" json:"Categories,omitempty"`
	Sorts      []*Sort     `protobuf:"bytes,3,rep,name=Sorts,proto3" json:"Sorts,omitempty"`
}

func (x *CatalogMetaResponse) Reset() {
	*x = CatalogMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogMetaResponse) ProtoMessage() {}

func (x *CatalogMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogMetaResponse.ProtoReflect.Descriptor instead.
func (*CatalogMetaResponse) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{13}
}

func (x *CatalogMetaResponse) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CatalogMetaResponse) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CatalogMetaResponse) GetSorts() []*Sort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type CatalogProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64        `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name   string        `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Brand  string        `protobuf:"bytes,3,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Rating review.Rating `protobuf:"varint,4,opt,name=Rating,proto3,enum=review.Rating" json:"Rating,omitempty"`
	Votes  uint64        `protobuf:"varint,5,opt,name=Votes,proto3" json:"Votes,omitempty"`
	Images []string      `protobuf:"bytes,6,rep,name=Images,proto3" json:"Images,omitempty"`
}

func (x *CatalogProduct) Reset() {
	*x = CatalogProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogProduct) ProtoMessage() {}

func (x *CatalogProduct) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogProduct.ProtoReflect.Descriptor instead.
func (*CatalogProduct) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{14}
}

func (x *CatalogProduct) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CatalogProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CatalogProduct) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *CatalogProduct) GetRating() review.Rating {
	if x != nil {
		return x.Rating
	}
	return review.Rating_UNDEFINED
}

func (x *CatalogProduct) GetVotes() uint64 {
	if x != nil {
		return x.Votes
	}
	return 0
}

func (x *CatalogProduct) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string      `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Categories []*Category `protobuf:"bytes,3,rep,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP(), []int{15}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

var File_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto protoreflect.FileDescriptor

var file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x6c, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x2d, 0x53, 0x75, 0x70, 0x65, 0x72, 0x2d, 0x57, 0x65, 0x62, 0x44,
	0x65, 0x76, 0x2d, 0x43, 0x6f, 0x72, 0x70, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x2d, 0x53, 0x75, 0x70, 0x65, 0x72, 0x2d, 0x57, 0x65, 0x62, 0x44, 0x65, 0x76, 0x2d, 0x43,
	0x6f, 0x72, 0x70, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x42, 0x79, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x05, 0x55, 0x55, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x55, 0x55, 0x49, 0x44, 0x73, 0x22, 0xc4,
	0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x58, 0x01, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01,
	0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x58, 0x01, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x4e, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x49, 0x64, 0x22,
	0xcc, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x05, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8f,
	0x01, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x22, 0x48, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xe3, 0x01, 0x0a, 0x06, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x5a, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x64, 0x0a, 0x0c,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x39, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x0a, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x22, 0x7a, 0x0a, 0x0f,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x98, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x05, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x53, 0x6f,
	0x72, 0x74, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x26, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x32, 0xd6, 0x02, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42,
	0x79, 0x55, 0x55, 0x49, 0x44, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x2d, 0x53, 0x75, 0x70, 0x65, 0x72, 0x2d,
	0x57, 0x65, 0x62, 0x44, 0x65, 0x76, 0x2d, 0x43, 0x6f, 0x72, 0x70, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescOnce sync.Once
	file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescData = file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDesc
)

func file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescGZIP() []byte {
	file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescOnce.Do(func() {
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescData)
	})
	return file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDescData
}

var file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_goTypes = []interface{}{
	(*SearchByUUIDsRequest)(nil), // 0: product.SearchByUUIDsRequest
	(*ProductMsg)(nil),           // 1: product.ProductMsg
	(*ProductWithID)(nil),        // 2: product.ProductWithID
	(*GetByIDRequest)(nil),       // 3: product.GetByIDRequest
	(*CatalogRequest)(nil),       // 4: product.CatalogRequest
	(*CatalogMetaRequest)(nil),   // 5: product.CatalogMetaRequest
	(*Sort)(nil),                 // 6: product.Sort
	(*Filter)(nil),               // 7: product.Filter
	(*ListFilter)(nil),           // 8: product.ListFilter
	(*SwitchFilter)(nil),         // 9: product.SwitchFilter
	(*RangeFilter)(nil),          // 10: product.RangeFilter
	(*RangeValue)(nil),           // 11: product.RangeValue
	(*CatalogResponse)(nil),      // 12: product.CatalogResponse
	(*CatalogMetaResponse)(nil),  // 13: product.CatalogMetaResponse
	(*CatalogProduct)(nil),       // 14: product.CatalogProduct
	(*Category)(nil),             // 15: product.Category
	(review.Rating)(0),           // 16: review.Rating
	(*empty.Empty)(nil),          // 17: google.protobuf.Empty
}
var file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_depIdxs = []int32{
	1,  // 0: product.ProductWithID.Product:type_name -> product.ProductMsg
	6,  // 1: product.CatalogRequest.Sorts:type_name -> product.Sort
	7,  // 2: product.CatalogRequest.Filters:type_name -> product.Filter
	7,  // 3: product.CatalogMetaRequest.Filters:type_name -> product.Filter
	8,  // 4: product.Filter.ListFilter:type_name -> product.ListFilter
	10, // 5: product.Filter.RangeFilter:type_name -> product.RangeFilter
	9,  // 6: product.Filter.SwitchFilter:type_name -> product.SwitchFilter
	11, // 7: product.RangeFilter.AvailableValue:type_name -> product.RangeValue
	11, // 8: product.RangeFilter.SelectedValue:type_name -> product.RangeValue
	14, // 9: product.CatalogResponse.Products:type_name -> product.CatalogProduct
	7,  // 10: product.CatalogMetaResponse.Filters:type_name -> product.Filter
	15, // 11: product.CatalogMetaResponse.Categories:type_name -> product.Category
	6,  // 12: product.CatalogMetaResponse.Sorts:type_name -> product.Sort
	16, // 13: product.CatalogProduct.Rating:type_name -> review.Rating
	15, // 14: product.Category.Categories:type_name -> product.Category
	0,  // 15: product.Product.SearchByUUIDs:input_type -> product.SearchByUUIDsRequest
	1,  // 16: product.Product.Create:input_type -> product.ProductMsg
	3,  // 17: product.Product.GetByID:input_type -> product.GetByIDRequest
	4,  // 18: product.Product.Catalog:input_type -> product.CatalogRequest
	5,  // 19: product.Product.CatalogMeta:input_type -> product.CatalogMetaRequest
	2,  // 20: product.Product.SearchByUUIDs:output_type -> product.ProductWithID
	17, // 21: product.Product.Create:output_type -> google.protobuf.Empty
	2,  // 22: product.Product.GetByID:output_type -> product.ProductWithID
	12, // 23: product.Product.Catalog:output_type -> product.CatalogResponse
	13, // 24: product.Product.CatalogMeta:output_type -> product.CatalogMetaResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_init() }
func file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_init() {
	if File_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByUUIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductWithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Filter_ListFilter)(nil),
		(*Filter_RangeFilter)(nil),
		(*Filter_SwitchFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_goTypes,
		DependencyIndexes: file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_depIdxs,
		MessageInfos:      file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_msgTypes,
	}.Build()
	File_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto = out.File
	file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_rawDesc = nil
	file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_goTypes = nil
	file_github_com_Ultimate_Super_WebDev_Corp_gateway_services_product_product_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductClient is the client API for Product service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductClient interface {
	SearchByUUIDs(ctx context.Context, in *SearchByUUIDsRequest, opts ...grpc.CallOption) (*ProductWithID, error)
	Create(ctx context.Context, in *ProductMsg, opts ...grpc.CallOption) (*empty.Empty, error)
	GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*ProductWithID, error)
	Catalog(ctx context.Context, in *CatalogRequest, opts ...grpc.CallOption) (*CatalogResponse, error)
	CatalogMeta(ctx context.Context, in *CatalogMetaRequest, opts ...grpc.CallOption) (*CatalogMetaResponse, error)
}

type productClient struct {
	cc grpc.ClientConnInterface
}

func NewProductClient(cc grpc.ClientConnInterface) ProductClient {
	return &productClient{cc}
}

func (c *productClient) SearchByUUIDs(ctx context.Context, in *SearchByUUIDsRequest, opts ...grpc.CallOption) (*ProductWithID, error) {
	out := new(ProductWithID)
	err := c.cc.Invoke(ctx, "/product.Product/SearchByUUIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) Create(ctx context.Context, in *ProductMsg, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/product.Product/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*ProductWithID, error) {
	out := new(ProductWithID)
	err := c.cc.Invoke(ctx, "/product.Product/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) Catalog(ctx context.Context, in *CatalogRequest, opts ...grpc.CallOption) (*CatalogResponse, error) {
	out := new(CatalogResponse)
	err := c.cc.Invoke(ctx, "/product.Product/Catalog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) CatalogMeta(ctx context.Context, in *CatalogMetaRequest, opts ...grpc.CallOption) (*CatalogMetaResponse, error) {
	out := new(CatalogMetaResponse)
	err := c.cc.Invoke(ctx, "/product.Product/CatalogMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServer is the server API for Product service.
type ProductServer interface {
	SearchByUUIDs(context.Context, *SearchByUUIDsRequest) (*ProductWithID, error)
	Create(context.Context, *ProductMsg) (*empty.Empty, error)
	GetByID(context.Context, *GetByIDRequest) (*ProductWithID, error)
	Catalog(context.Context, *CatalogRequest) (*CatalogResponse, error)
	CatalogMeta(context.Context, *CatalogMetaRequest) (*CatalogMetaResponse, error)
}

// UnimplementedProductServer can be embedded to have forward compatible implementations.
type UnimplementedProductServer struct {
}

func (*UnimplementedProductServer) SearchByUUIDs(context.Context, *SearchByUUIDsRequest) (*ProductWithID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchByUUIDs not implemented")
}
func (*UnimplementedProductServer) Create(context.Context, *ProductMsg) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedProductServer) GetByID(context.Context, *GetByIDRequest) (*ProductWithID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedProductServer) Catalog(context.Context, *CatalogRequest) (*CatalogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Catalog not implemented")
}
func (*UnimplementedProductServer) CatalogMeta(context.Context, *CatalogMetaRequest) (*CatalogMetaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CatalogMeta not implemented")
}

func RegisterProductServer(s *grpc.Server, srv ProductServer) {
	s.RegisterService(&_Product_serviceDesc, srv)
}

func _Product_SearchByUUIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchByUUIDsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).SearchByUUIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/SearchByUUIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).SearchByUUIDs(ctx, req.(*SearchByUUIDsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).Create(ctx, req.(*ProductMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).GetByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_Catalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CatalogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).Catalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/Catalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).Catalog(ctx, req.(*CatalogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_CatalogMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CatalogMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).CatalogMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/CatalogMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).CatalogMeta(ctx, req.(*CatalogMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Product_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product.Product",
	HandlerType: (*ProductServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchByUUIDs",
			Handler:    _Product_SearchByUUIDs_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Product_Create_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _Product_GetByID_Handler,
		},
		{
			MethodName: "Catalog",
			Handler:    _Product_Catalog_Handler,
		},
		{
			MethodName: "CatalogMeta",
			Handler:    _Product_CatalogMeta_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/Ultimate-Super-WebDev-Corp/gateway/services/product/product.proto",
}
