// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/customer/customer.proto

package customer

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_CustomerMsg_Email = regexp.MustCompile(`^[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}$`)

func (this *CustomerMsg) Validate() error {
	if !_regex_CustomerMsg_Email.MatchString(this.Email) {
		return github_com_mwitkow_go_proto_validators.FieldError("Email", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,4}$"`, this.Email))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}

var _regex_CreateRequest_Password = regexp.MustCompile(`^.{4,}$`)

func (this *CreateRequest) Validate() error {
	if !_regex_CreateRequest_Password.MatchString(this.Password) {
		return github_com_mwitkow_go_proto_validators.FieldError("Password", fmt.Errorf(`value '%v' must be a string conforming to regex "^.{4,}$"`, this.Password))
	}
	if nil == this.Customer {
		return github_com_mwitkow_go_proto_validators.FieldError("Customer", fmt.Errorf("message must exist"))
	}
	if this.Customer != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Customer); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Customer", err)
		}
	}
	return nil
}

var _regex_LoginRequest_Email = regexp.MustCompile(`^[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}$`)
var _regex_LoginRequest_Password = regexp.MustCompile(`^.{4,}$`)

func (this *LoginRequest) Validate() error {
	if !_regex_LoginRequest_Email.MatchString(this.Email) {
		return github_com_mwitkow_go_proto_validators.FieldError("Email", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,4}$"`, this.Email))
	}
	if !_regex_LoginRequest_Password.MatchString(this.Password) {
		return github_com_mwitkow_go_proto_validators.FieldError("Password", fmt.Errorf(`value '%v' must be a string conforming to regex "^.{4,}$"`, this.Password))
	}
	return nil
}
