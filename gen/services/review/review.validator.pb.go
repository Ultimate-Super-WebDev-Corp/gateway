// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/Ultimate-Super-WebDev-Corp/gateway/services/review/review.proto

package review

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CreateCommentRequest) Validate() error {
	if !(this.ProductId > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProductId", fmt.Errorf(`value '%v' must be greater than '0'`, this.ProductId))
	}
	if this.Text == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Text", fmt.Errorf(`value '%v' must not be an empty string`, this.Text))
	}
	return nil
}
func (this *CreateCommentFromSourceRequest) Validate() error {
	if !(this.ProductId > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProductId", fmt.Errorf(`value '%v' must be greater than '0'`, this.ProductId))
	}
	if this.Text == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Text", fmt.Errorf(`value '%v' must not be an empty string`, this.Text))
	}
	if this.Source == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Source", fmt.Errorf(`value '%v' must not be an empty string`, this.Source))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *CreateRatingFromSourceRequest) Validate() error {
	if !(this.ProductId > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProductId", fmt.Errorf(`value '%v' must be greater than '0'`, this.ProductId))
	}
	if this.Source == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Source", fmt.Errorf(`value '%v' must not be an empty string`, this.Source))
	}
	if !(this.Votes > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Votes", fmt.Errorf(`value '%v' must be greater than '0'`, this.Votes))
	}
	return nil
}
func (this *CommentListRequest) Validate() error {
	if !(this.ProductId > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProductId", fmt.Errorf(`value '%v' must be greater than '0'`, this.ProductId))
	}
	return nil
}
func (this *CommentListResponse) Validate() error {
	for _, item := range this.Comments {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Comments", err)
			}
		}
	}
	return nil
}
func (this *Comment) Validate() error {
	if this.Text == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Text", fmt.Errorf(`value '%v' must not be an empty string`, this.Text))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *GetRatingRequest) Validate() error {
	if !(this.ProductId > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProductId", fmt.Errorf(`value '%v' must be greater than '0'`, this.ProductId))
	}
	return nil
}
func (this *GetRatingResponse) Validate() error {
	for _, item := range this.Ratings {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Ratings", err)
			}
		}
	}
	return nil
}
func (this *RatingWithSource) Validate() error {
	return nil
}
