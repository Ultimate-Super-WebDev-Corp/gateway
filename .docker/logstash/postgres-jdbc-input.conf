input {
    jdbc {
        type => "product"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        statement => "select id, name, brand from product where updated_at >= timenow() - interval '1 hours'"
        schedule => "*/1 * * * *"
    }

    jdbc {
            type => "rating"
            jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
            jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
            jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
            statement => "select r.product_id id, r.votes , r.rating
                          from rating r
                          where updated_at >= timenow() - interval '1 hours'
                          and r.source = 'aggregated'"
            schedule => "*/1 * * * *"
        }
}

output {
    elasticsearch {
        hosts => ["${LOGSTASH_ELASTICSEARCH_HOST}"]
        index => "product"
        document_id => "%{id}"
        doc_as_upsert => true
        action => "update"
    }
}